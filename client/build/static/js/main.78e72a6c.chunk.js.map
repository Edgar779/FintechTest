{"version":3,"sources":["config/config.js","logo.svg","services/api.js","Example.js","Fintech.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API_URL","axios","create","baseURL","config","Example","Fintech","useState","name","setName","show","setShow","median","average","small","handleClose","className","Form","style","marginTop","Group","controlId","Control","type","value","onChange","e","target","placeholder","Button","size","block","variant","class","tabindex","role","data-dismiss","aria-label","aria-hidden","Modal","onHide","Header","closeButton","Title","Body","Footer","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFAMAA,EAAOC,QANQ,CAGXC,QAAS,K,sICHE,I,gDCIDC,IAAMC,OAAO,CACvBC,QAAQ,GAAD,OAAKC,IAAOJ,W,uBCyCNK,I,QCsEFC,MA3Gf,WAAoB,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEWF,oBAAS,GAFpB,gCAGOA,oBAAS,IAHhB,mBAGVG,EAHU,KAGJC,EAHI,OAIWJ,mBAAS,IAJpB,mBAIVK,EAJU,aAKaL,mBAAS,KALtB,mBAKVM,EALU,aAMSN,mBAAS,KANlB,mBAMVO,EANU,KAQXC,GARW,KAQG,kBAAMJ,GAAQ,KAgClC,OACE,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aACzB,qBAAKA,UAAU,WAAf,SACA,eAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,UAAW,SAAzB,UACE,cAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,iBAAtB,SACE,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,MAAOhB,EAAMiB,SAdzC,SAAiBC,GAEfjB,EAAQiB,EAAEC,OAAOH,QAYyCI,YAAY,mBAExE,cAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,OAAK,EAACC,QAAQ,OAAhC,yBAGF,qBAAKhB,UAAU,gBAeP,qBAAKiB,MAAM,QAAQC,SAAS,KAAKC,KAAK,SAAtC,SACE,qBAAKF,MAAM,eAAeE,KAAK,WAA/B,SACE,sBAAKF,MAAM,gBAAX,UACE,sBAAKA,MAAM,eAAX,UACE,oBAAIA,MAAM,cAAV,yBACA,wBAAQV,KAAK,SAASU,MAAM,QAAQG,eAAa,QAAQC,aAAW,QAApE,SACE,sBAAMC,cAAY,OAAlB,uBAGJ,qBAAKL,MAAM,aAAX,SACE,6DAEF,sBAAKA,MAAM,eAAX,UACE,wBAAQV,KAAK,SAASU,MAAM,kBAA5B,0BACA,wBAAQV,KAAK,SAASU,MAAM,oBAAoBG,eAAa,QAA7D,6BAKR,eAACG,EAAA,EAAD,CAAO7B,KAAMA,EAAM8B,OAAQzB,EAA3B,UACE,cAACwB,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,8BAEF,eAACJ,EAAA,EAAMK,KAAP,WAAa9B,EAAb,6BAA0BF,EAA1B,6BAAwCC,EAAxC,8BACA,eAAC0B,EAAA,EAAMM,OAAP,WACE,cAAChB,EAAA,EAAD,CAAQG,QAAQ,YAAYc,QAAS/B,EAArC,mBAGA,cAACc,EAAA,EAAD,CAAQG,QAAQ,UAAUc,QAAS/B,EAAnC,sC,eClFGgC,MAbf,WACE,OACE,cAAC,IAAD,UACA,qBAAK/B,UAAU,MAAf,SACM,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,IAAIC,UAAW5C,WCH9B6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78e72a6c.chunk.js","sourcesContent":["const config = {\r\n    // process.env.REACT_APP_BASE_URL\r\n    \r\n    API_URL: ''\r\n};\r\n\r\nmodule.exports = config;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from 'axios';\r\nimport config from \"../config/config\";\r\n\r\n// const accessToken = localStorage.getItem('accessToken');\r\n  const API = axios.create({\r\n    baseURL: `${config.API_URL}`,\r\n\r\n    // headers: {\"Authorization\" : `${accessToken ? accessToken : ''}`}\r\n  });\r\n\r\n//   export const refreshToken = function(token) {\r\n//     API.defaults.headers['Authorization'] = `Bearer ${token ? token : ''}`;\r\n//   };\r\n\r\n\r\n export default API;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\nimport API from './services/api';\r\nimport config from './config/config';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction Example({...props}) {\r\n    // console.log(...props);\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    if(props.open){\r\n        console.log(props);\r\n\r\n       return setShow(props.open);\r\n    }\r\n\r\n    const handleShow = () => setShow(props);\r\n    // console.log(props.open ==true);\r\n\r\n    return (\r\n      <>\r\n        {/* <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch demo modal\r\n        </Button> */}\r\n  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  export default Example;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\nimport API from './services/api';\r\nimport config from './config/config';\r\nimport Example from \"./Example\";\r\n// or less ideally\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nfunction Fintech() {\r\n  const [name, setName] = useState('');\r\n  const [isOPen, setisOPen] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [median, setMedian] = useState('');\r\n  const [average, setAverage] = useState('');\r\n  const [small, setSmall] = useState('');\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  function getPrice() {\r\n    const formData = {\r\n      name\r\n    }\r\n\r\n    API.post(`/getDB`, formData)\r\n      .then((response) => {\r\n\r\n\r\n        setShow(true);\r\n        setMedian(response.data.median);\r\n        setAverage(response.data.average);\r\n        setSmall(response.data.small);\r\n        // setText(response.data)\r\n        // console.log(response.data);\r\n\r\n\r\n        // return this.setState({ banks });\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  function setname(e) {\r\n\r\n    setName(e.target.value);\r\n\r\n    // setName()\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\"></div>\r\n<div className=\"col-md-6\">\r\n<Form style={{marginTop: \"200px\"}}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Control type=\"text\" value={name} onChange={setname} placeholder=\"Type the car\" />\r\n  </Form.Group>\r\n  <Button size=\"lg\" block variant=\"info\">Search</Button>\r\n</Form>\r\n</div>\r\n<div className=\"col-md-3\"></div>\r\n\r\n        </div>\r\n      \r\n        {/* <div class=\"input-group mb-3\">\r\n\r\n          <input type=\"text\" value={name} onChange={setname} class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-outline-secondary\" type=\"button\" onClick={getPrice}>Search</button>\r\n          </div>\r\n        </div> */}\r\n\r\n\r\n\r\n\r\n        <div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n          <div class=\"modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Modal title</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <p>Modal body text goes here.</p>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{small}դրամ--{median}դրամ--{average}դրամ</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fintech;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport API from './services/api';\nimport config from './config/config';\nimport Fintech from \"./Fintech\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { Button,Modal } from 'react-bootstrap';\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Fintech} />\n          </Switch>\n        \n    \n    </div></Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}